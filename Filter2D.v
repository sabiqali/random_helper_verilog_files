// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Filter2D (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_src_rows_V_dout,
        p_src_rows_V_empty_n,
        p_src_rows_V_read,
        p_src_cols_V_dout,
        p_src_cols_V_empty_n,
        p_src_cols_V_read,
        p_src_data_stream_V_dout,
        p_src_data_stream_V_empty_n,
        p_src_data_stream_V_read,
        p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n,
        p_dst_data_stream_V_write
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_pp0_stage0 = 5'd8;
parameter    ap_ST_fsm_state10 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [11:0] p_src_rows_V_dout;
input   p_src_rows_V_empty_n;
output   p_src_rows_V_read;
input  [11:0] p_src_cols_V_dout;
input   p_src_cols_V_empty_n;
output   p_src_cols_V_read;
input  [7:0] p_src_data_stream_V_dout;
input   p_src_data_stream_V_empty_n;
output   p_src_data_stream_V_read;
output  [7:0] p_dst_data_stream_V_din;
input   p_dst_data_stream_V_full_n;
output   p_dst_data_stream_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_src_rows_V_read;
reg p_src_cols_V_read;
reg p_src_data_stream_V_read;
reg p_dst_data_stream_V_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_src_rows_V_blk_n;
reg    p_src_cols_V_blk_n;
reg    p_src_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond460_i_i_reg_1302;
reg   [0:0] exitcond460_i_i_reg_1302_pp0_iter1_reg;
reg   [0:0] or_cond_i_i_i_reg_1316;
reg   [0:0] or_cond_i_i_i_reg_1316_pp0_iter1_reg;
reg   [0:0] icmp_reg_1258;
reg   [0:0] tmp_2_i_reg_1253;
reg    p_dst_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter5;
reg   [0:0] or_cond_i_i_reg_1339;
reg   [0:0] or_cond_i_i_reg_1339_pp0_iter4_reg;
reg   [31:0] t_V_2_reg_299;
wire  signed [31:0] rows_fu_310_p1;
reg  signed [31:0] rows_reg_1197;
reg    ap_block_state1;
wire  signed [31:0] cols_fu_318_p1;
reg  signed [31:0] cols_reg_1207;
wire  signed [31:0] tmp_cast_i_fu_332_p1;
reg  signed [31:0] tmp_cast_i_reg_1213;
wire  signed [31:0] tmp_1_cast_i_fu_342_p1;
reg  signed [31:0] tmp_1_cast_i_reg_1218;
wire   [1:0] tmp_fu_354_p2;
reg   [1:0] tmp_reg_1223;
wire   [1:0] tmp_133_i_fu_372_p2;
reg   [1:0] tmp_133_i_reg_1229;
wire  signed [31:0] tmp_10_cast_i_fu_396_p1;
reg  signed [31:0] tmp_10_cast_i_reg_1235;
wire   [1:0] tmp_1_fu_400_p2;
reg   [1:0] tmp_1_reg_1240;
wire   [31:0] i_V_fu_411_p2;
reg   [31:0] i_V_reg_1248;
wire    ap_CS_fsm_state2;
wire   [0:0] tmp_2_i_fu_417_p2;
wire   [0:0] exitcond461_i_i_fu_406_p2;
wire   [0:0] icmp_fu_432_p2;
wire   [0:0] tmp_93_i_fu_438_p2;
reg   [0:0] tmp_93_i_reg_1263;
wire   [0:0] tmp_93_1_i_fu_444_p2;
reg   [0:0] tmp_93_1_i_reg_1267;
wire   [0:0] tmp_115_i_fu_450_p2;
reg   [0:0] tmp_115_i_reg_1271;
wire   [1:0] tmp_10_fu_602_p3;
reg   [1:0] tmp_10_reg_1277;
wire   [1:0] tmp_14_fu_629_p3;
reg   [1:0] tmp_14_reg_1282;
wire   [0:0] tmp_48_0_not_i_fu_637_p2;
reg   [0:0] tmp_48_0_not_i_reg_1287;
wire    ap_CS_fsm_state3;
wire   [1:0] row_assign_8_0_t_i_fu_642_p2;
reg   [1:0] row_assign_8_0_t_i_reg_1292;
wire   [1:0] row_assign_8_2_t_i_fu_646_p2;
reg   [1:0] row_assign_8_2_t_i_reg_1297;
wire   [0:0] exitcond460_i_i_fu_650_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state4_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
reg    ap_predicate_op159_read_state6;
reg    ap_predicate_op170_read_state6;
reg    ap_block_state6_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
wire    ap_block_state8_pp0_stage0_iter4;
reg    ap_block_state9_pp0_stage0_iter5;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond460_i_i_reg_1302_pp0_iter2_reg;
reg   [0:0] exitcond460_i_i_reg_1302_pp0_iter3_reg;
wire   [31:0] j_V_fu_655_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [31:0] ImagLoc_x_fu_677_p2;
reg   [31:0] ImagLoc_x_reg_1311;
wire   [0:0] or_cond_i_i_i_fu_702_p2;
wire   [31:0] p_p2_i_i_i_fu_722_p3;
reg   [31:0] p_p2_i_i_i_reg_1321;
wire   [0:0] sel_tmp8_fu_747_p2;
reg   [0:0] sel_tmp8_reg_1327;
wire   [0:0] brmerge_i_fu_753_p2;
reg   [0:0] brmerge_i_reg_1332;
reg   [0:0] brmerge_i_reg_1332_pp0_iter1_reg;
wire   [0:0] or_cond_i_i_fu_758_p2;
reg   [0:0] or_cond_i_i_reg_1339_pp0_iter1_reg;
reg   [0:0] or_cond_i_i_reg_1339_pp0_iter2_reg;
reg   [0:0] or_cond_i_i_reg_1339_pp0_iter3_reg;
reg   [10:0] k_buf_0_val_3_addr_reg_1343;
wire   [1:0] col_assign_1_t_i_fu_790_p2;
reg   [1:0] col_assign_1_t_i_reg_1349;
reg   [10:0] k_buf_0_val_4_addr_reg_1356;
reg   [10:0] k_buf_0_val_5_addr_reg_1362;
wire   [7:0] src_kernel_win_0_va_4_fu_914_p3;
reg   [7:0] src_kernel_win_0_va_4_reg_1368;
reg   [7:0] src_kernel_win_0_va_4_reg_1368_pp0_iter3_reg;
wire   [7:0] src_kernel_win_0_va_5_fu_932_p3;
reg   [7:0] src_kernel_win_0_va_5_reg_1375;
wire   [9:0] sum9_i_fu_974_p2;
reg   [9:0] sum9_i_reg_1381;
wire   [7:0] p_Val2_3_fu_1113_p3;
reg   [7:0] p_Val2_3_reg_1386;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter3;
reg    ap_condition_pp0_exit_iter2_state6;
reg    ap_enable_reg_pp0_iter4;
wire   [10:0] k_buf_0_val_3_address0;
reg    k_buf_0_val_3_ce0;
wire   [7:0] k_buf_0_val_3_q0;
wire   [10:0] k_buf_0_val_3_address1;
reg    k_buf_0_val_3_ce1;
reg    k_buf_0_val_3_we1;
wire   [10:0] k_buf_0_val_4_address0;
reg    k_buf_0_val_4_ce0;
wire   [7:0] k_buf_0_val_4_q0;
wire   [10:0] k_buf_0_val_4_address1;
reg    k_buf_0_val_4_ce1;
reg    k_buf_0_val_4_we1;
reg   [7:0] k_buf_0_val_4_d1;
wire   [10:0] k_buf_0_val_5_address0;
reg    k_buf_0_val_5_ce0;
wire   [7:0] k_buf_0_val_5_q0;
wire   [10:0] k_buf_0_val_5_address1;
reg    k_buf_0_val_5_ce1;
reg    k_buf_0_val_5_we1;
reg   [7:0] k_buf_0_val_5_d1;
reg   [31:0] t_V_reg_288;
wire    ap_CS_fsm_state10;
wire   [63:0] tmp_58_i_fu_783_p1;
reg    ap_block_pp0_stage0_01001;
reg   [7:0] src_kernel_win_0_va_fu_158;
reg   [7:0] src_kernel_win_0_va_1_fu_162;
reg   [7:0] src_kernel_win_0_va_2_fu_166;
reg   [7:0] src_kernel_win_0_va_3_fu_170;
reg   [7:0] right_border_buf_0_s_fu_174;
wire   [7:0] col_buf_0_val_0_0_fu_824_p3;
reg   [7:0] right_border_buf_0_1_fu_178;
reg   [7:0] right_border_buf_0_2_fu_182;
reg   [7:0] right_border_buf_0_3_fu_186;
wire   [7:0] col_buf_0_val_1_0_fu_842_p3;
reg   [7:0] right_border_buf_0_4_fu_190;
reg   [7:0] right_border_buf_0_5_fu_194;
wire   [7:0] col_buf_0_val_2_0_fu_860_p3;
wire  signed [11:0] rows_fu_310_p0;
wire  signed [11:0] extLd_cast_i_fu_314_p0;
wire  signed [11:0] cols_fu_318_p0;
wire  signed [11:0] extLd14_cast_i_fu_322_p0;
wire  signed [12:0] extLd14_cast_i_fu_322_p1;
wire   [12:0] tmp_i_fu_326_p2;
wire  signed [12:0] extLd_cast_i_fu_314_p1;
wire   [12:0] tmp_1_i_fu_336_p2;
wire  signed [11:0] tmp_4_fu_346_p0;
wire  signed [11:0] tmp_5_fu_350_p0;
wire   [1:0] tmp_4_fu_346_p1;
wire  signed [11:0] tmp_6_fu_360_p0;
wire   [0:0] tmp_6_fu_360_p1;
wire   [1:0] tmp_132_cast_i1_fu_364_p3;
wire  signed [11:0] tmp_9_i_fu_378_p1;
wire   [12:0] tmp_9_i_fu_378_p3;
wire  signed [13:0] tmp_9_cast_i_fu_386_p1;
wire   [13:0] tmp_10_i_fu_390_p2;
wire   [1:0] tmp_5_fu_350_p1;
wire   [30:0] tmp_7_fu_422_p4;
wire   [31:0] tmp_118_i_fu_459_p2;
wire   [0:0] tmp_9_fu_465_p3;
wire   [0:0] tmp_120_i_fu_479_p2;
wire   [0:0] rev_fu_473_p2;
wire   [0:0] tmp_18_fu_490_p3;
wire   [31:0] p_assign_7_i_fu_498_p2;
wire   [31:0] p_p2_i497_i_i_fu_504_p3;
wire   [31:0] p_assign_6_2_i_fu_521_p2;
wire   [0:0] tmp_25_fu_527_p3;
wire   [0:0] tmp_120_2_i_fu_541_p2;
wire   [0:0] rev1_fu_535_p2;
wire   [0:0] tmp_26_fu_552_p3;
wire   [31:0] p_assign_7_2_i_fu_560_p2;
wire   [31:0] p_p2_i497_i_2_i_fu_566_p3;
wire   [1:0] tmp_24_fu_517_p1;
wire   [0:0] tmp_131_i_fu_512_p2;
wire   [1:0] tmp_s_fu_583_p2;
wire   [1:0] tmp_8_fu_455_p1;
wire   [0:0] or_cond_i496_i_i_fu_484_p2;
wire   [1:0] tmp_3_fu_596_p2;
wire   [1:0] tmp_2_fu_588_p3;
wire   [1:0] tmp_28_fu_579_p1;
wire   [0:0] tmp_131_2_i_fu_574_p2;
wire   [1:0] tmp_11_fu_610_p2;
wire   [0:0] or_cond_i496_i_2_i_fu_546_p2;
wire   [1:0] tmp_13_fu_623_p2;
wire   [1:0] tmp_12_fu_615_p3;
wire   [30:0] tmp_29_fu_661_p4;
wire   [0:0] tmp_30_fu_683_p3;
wire   [0:0] tmp_6_i_fu_697_p2;
wire   [0:0] rev2_fu_691_p2;
wire   [0:0] tmp_31_fu_708_p3;
wire   [31:0] p_assign_1_fu_716_p2;
wire   [0:0] tmp_6_i_not_fu_735_p2;
wire   [0:0] tmp_8_i_fu_730_p2;
wire   [0:0] sel_tmp7_fu_741_p2;
wire   [0:0] icmp1_fu_671_p2;
wire   [31:0] p_assign_2_fu_763_p2;
wire   [31:0] p_assign_3_fu_767_p3;
wire   [31:0] x_fu_773_p3;
wire   [1:0] tmp_32_fu_779_p1;
wire   [7:0] tmp_15_fu_813_p5;
wire   [7:0] tmp_16_fu_831_p5;
wire   [7:0] tmp_17_fu_849_p5;
wire   [7:0] tmp_19_fu_903_p5;
wire   [7:0] tmp_20_fu_921_p5;
wire   [8:0] p_shl_i_fu_949_p3;
wire   [8:0] r_V_0_2_cast_i_cast_fu_961_p1;
wire   [8:0] r_V_0_cast_i_cast_fu_945_p1;
wire   [8:0] tmp5_fu_964_p2;
wire   [9:0] p_shl_cast_i_fu_957_p1;
wire   [9:0] tmp20_cast_fu_970_p1;
wire   [10:0] tmp_138_2_cast_i_fu_1001_p1;
wire   [10:0] sum9_cast_i_fu_998_p1;
wire   [8:0] r_V_2_2_1_i_fu_1011_p3;
wire   [10:0] sum_V_2_i_fu_1005_p2;
wire   [9:0] tmp_138_2_2_cast_i_c_fu_1033_p1;
wire   [9:0] tmp_138_2_cast_i_ca_fu_1019_p1;
wire   [9:0] tmp21_fu_1036_p2;
wire   [10:0] tmp21_cast_fu_1042_p1;
wire   [10:0] p_Val2_s_fu_1046_p2;
wire   [7:0] tmp_36_fu_1027_p2;
wire   [7:0] tmp_35_fu_1023_p1;
wire   [7:0] tmp22_fu_1060_p2;
wire   [0:0] p_Result_s_fu_1052_p3;
wire   [2:0] tmp_21_fu_1071_p4;
wire   [0:0] not_i_i_i_fu_1087_p2;
wire   [0:0] tmp_i_i_i_fu_1081_p2;
wire   [0:0] overflow_fu_1093_p2;
wire   [0:0] tmp_1_i_i_i_fu_1107_p2;
wire   [7:0] p_mux_i_i_cast_i_fu_1099_p3;
wire   [7:0] p_Val2_1_fu_1065_p2;
reg   [4:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_enable_operation_132;
reg    ap_enable_state5_pp0_iter1_stage0;
reg    ap_enable_operation_150;
reg    ap_enable_state6_pp0_iter2_stage0;
reg    ap_predicate_op164_store_state6;
reg    ap_enable_operation_164;
reg    ap_predicate_op171_store_state6;
reg    ap_enable_operation_171;
reg    ap_enable_operation_135;
reg    ap_enable_operation_153;
reg    ap_predicate_op162_store_state6;
reg    ap_enable_operation_162;
reg    ap_predicate_op169_store_state6;
reg    ap_enable_operation_169;
reg    ap_predicate_op137_load_state5;
reg    ap_enable_operation_137;
reg    ap_predicate_op156_load_state6;
reg    ap_enable_operation_156;
reg    ap_predicate_op160_store_state6;
reg    ap_enable_operation_160;
reg    ap_predicate_op168_store_state6;
reg    ap_enable_operation_168;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_936;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
end

Filter2D_k_buf_0_bkb #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_0_val_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_3_address0),
    .ce0(k_buf_0_val_3_ce0),
    .q0(k_buf_0_val_3_q0),
    .address1(k_buf_0_val_3_address1),
    .ce1(k_buf_0_val_3_ce1),
    .we1(k_buf_0_val_3_we1),
    .d1(p_src_data_stream_V_dout)
);

Filter2D_k_buf_0_bkb #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_0_val_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_4_address0),
    .ce0(k_buf_0_val_4_ce0),
    .q0(k_buf_0_val_4_q0),
    .address1(k_buf_0_val_4_address1),
    .ce1(k_buf_0_val_4_ce1),
    .we1(k_buf_0_val_4_we1),
    .d1(k_buf_0_val_4_d1)
);

Filter2D_k_buf_0_bkb #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_0_val_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_5_address0),
    .ce0(k_buf_0_val_5_ce0),
    .q0(k_buf_0_val_5_q0),
    .address1(k_buf_0_val_5_address1),
    .ce1(k_buf_0_val_5_ce1),
    .we1(k_buf_0_val_5_we1),
    .d1(k_buf_0_val_5_d1)
);

conv_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
conv_mux_32_8_1_1_U19(
    .din0(right_border_buf_0_s_fu_174),
    .din1(right_border_buf_0_1_fu_178),
    .din2(8'd0),
    .din3(col_assign_1_t_i_reg_1349),
    .dout(tmp_15_fu_813_p5)
);

conv_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
conv_mux_32_8_1_1_U20(
    .din0(right_border_buf_0_3_fu_186),
    .din1(right_border_buf_0_4_fu_190),
    .din2(8'd0),
    .din3(col_assign_1_t_i_reg_1349),
    .dout(tmp_16_fu_831_p5)
);

conv_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
conv_mux_32_8_1_1_U21(
    .din0(right_border_buf_0_5_fu_194),
    .din1(right_border_buf_0_2_fu_182),
    .din2(8'd0),
    .din3(col_assign_1_t_i_reg_1349),
    .dout(tmp_17_fu_849_p5)
);

conv_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
conv_mux_32_8_1_1_U22(
    .din0(col_buf_0_val_0_0_fu_824_p3),
    .din1(col_buf_0_val_1_0_fu_842_p3),
    .din2(col_buf_0_val_2_0_fu_860_p3),
    .din3(row_assign_8_0_t_i_reg_1292),
    .dout(tmp_19_fu_903_p5)
);

conv_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
conv_mux_32_8_1_1_U23(
    .din0(col_buf_0_val_0_0_fu_824_p3),
    .din1(col_buf_0_val_1_0_fu_842_p3),
    .din2(col_buf_0_val_2_0_fu_860_p3),
    .din3(row_assign_8_2_t_i_reg_1297),
    .dout(tmp_20_fu_921_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((exitcond461_i_i_fu_406_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((exitcond460_i_i_fu_650_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter2_state6)) begin
                ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter1;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp0_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_i_fu_650_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_V_2_reg_299 <= j_V_fu_655_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        t_V_2_reg_299 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        t_V_reg_288 <= i_V_reg_1248;
    end else if ((~((p_src_cols_V_empty_n == 1'b0) | (p_src_rows_V_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_reg_288 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_i_fu_650_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ImagLoc_x_reg_1311 <= ImagLoc_x_fu_677_p2;
        brmerge_i_reg_1332 <= brmerge_i_fu_753_p2;
        or_cond_i_i_i_reg_1316 <= or_cond_i_i_i_fu_702_p2;
        or_cond_i_i_reg_1339 <= or_cond_i_i_fu_758_p2;
        p_p2_i_i_i_reg_1321 <= p_p2_i_i_i_fu_722_p3;
        sel_tmp8_reg_1327 <= sel_tmp8_fu_747_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        brmerge_i_reg_1332_pp0_iter1_reg <= brmerge_i_reg_1332;
        exitcond460_i_i_reg_1302 <= exitcond460_i_i_fu_650_p2;
        exitcond460_i_i_reg_1302_pp0_iter1_reg <= exitcond460_i_i_reg_1302;
        or_cond_i_i_i_reg_1316_pp0_iter1_reg <= or_cond_i_i_i_reg_1316;
        or_cond_i_i_reg_1339_pp0_iter1_reg <= or_cond_i_i_reg_1339;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_i_reg_1302 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        col_assign_1_t_i_reg_1349 <= col_assign_1_t_i_fu_790_p2;
        k_buf_0_val_3_addr_reg_1343 <= tmp_58_i_fu_783_p1;
        k_buf_0_val_4_addr_reg_1356 <= tmp_58_i_fu_783_p1;
        k_buf_0_val_5_addr_reg_1362 <= tmp_58_i_fu_783_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((p_src_cols_V_empty_n == 1'b0) | (p_src_rows_V_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cols_reg_1207 <= cols_fu_318_p1;
        rows_reg_1197 <= rows_fu_310_p1;
        tmp_10_cast_i_reg_1235[31 : 1] <= tmp_10_cast_i_fu_396_p1[31 : 1];
        tmp_133_i_reg_1229 <= tmp_133_i_fu_372_p2;
        tmp_1_cast_i_reg_1218 <= tmp_1_cast_i_fu_342_p1;
        tmp_1_reg_1240 <= tmp_1_fu_400_p2;
        tmp_cast_i_reg_1213 <= tmp_cast_i_fu_332_p1;
        tmp_reg_1223 <= tmp_fu_354_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        exitcond460_i_i_reg_1302_pp0_iter2_reg <= exitcond460_i_i_reg_1302_pp0_iter1_reg;
        exitcond460_i_i_reg_1302_pp0_iter3_reg <= exitcond460_i_i_reg_1302_pp0_iter2_reg;
        or_cond_i_i_reg_1339_pp0_iter2_reg <= or_cond_i_i_reg_1339_pp0_iter1_reg;
        or_cond_i_i_reg_1339_pp0_iter3_reg <= or_cond_i_i_reg_1339_pp0_iter2_reg;
        or_cond_i_i_reg_1339_pp0_iter4_reg <= or_cond_i_i_reg_1339_pp0_iter3_reg;
        src_kernel_win_0_va_4_reg_1368_pp0_iter3_reg <= src_kernel_win_0_va_4_reg_1368;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_1248 <= i_V_fu_411_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond461_i_i_fu_406_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_reg_1258 <= icmp_fu_432_p2;
        tmp_10_reg_1277 <= tmp_10_fu_602_p3;
        tmp_115_i_reg_1271 <= tmp_115_i_fu_450_p2;
        tmp_14_reg_1282 <= tmp_14_fu_629_p3;
        tmp_2_i_reg_1253 <= tmp_2_i_fu_417_p2;
        tmp_93_1_i_reg_1267 <= tmp_93_1_i_fu_444_p2;
        tmp_93_i_reg_1263 <= tmp_93_i_fu_438_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_i_reg_1339_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_3_reg_1386 <= p_Val2_3_fu_1113_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_2_i_reg_1253 == 1'd1) & (icmp_reg_1258 == 1'd1) & (or_cond_i_i_i_reg_1316_pp0_iter1_reg == 1'd1) & (exitcond460_i_i_reg_1302_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        right_border_buf_0_1_fu_178 <= right_border_buf_0_s_fu_174;
        right_border_buf_0_2_fu_182 <= right_border_buf_0_5_fu_194;
        right_border_buf_0_3_fu_186 <= col_buf_0_val_1_0_fu_842_p3;
        right_border_buf_0_4_fu_190 <= right_border_buf_0_3_fu_186;
        right_border_buf_0_5_fu_194 <= col_buf_0_val_2_0_fu_860_p3;
        right_border_buf_0_s_fu_174 <= col_buf_0_val_0_0_fu_824_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_115_i_reg_1271 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        row_assign_8_0_t_i_reg_1292 <= row_assign_8_0_t_i_fu_642_p2;
        row_assign_8_2_t_i_reg_1297 <= row_assign_8_2_t_i_fu_646_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_i_reg_1302_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_1_fu_162 <= src_kernel_win_0_va_fu_158;
        src_kernel_win_0_va_fu_158 <= src_kernel_win_0_va_4_reg_1368_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_i_reg_1302_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_2_fu_166 <= src_kernel_win_0_va_5_reg_1375;
        src_kernel_win_0_va_3_fu_170 <= src_kernel_win_0_va_2_fu_166;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_i_reg_1302_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_4_reg_1368 <= src_kernel_win_0_va_4_fu_914_p3;
        src_kernel_win_0_va_5_reg_1375 <= src_kernel_win_0_va_5_fu_932_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_i_reg_1339_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sum9_i_reg_1381 <= sum9_i_fu_974_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_48_0_not_i_reg_1287 <= tmp_48_0_not_i_fu_637_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_condition_pp0_exit_iter2_state6 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter2_state6 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond461_i_i_fu_406_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond461_i_i_fu_406_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_ce0 = 1'b1;
    end else begin
        k_buf_0_val_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_2_i_reg_1253 == 1'd1) & (icmp_reg_1258 == 1'd1) & (or_cond_i_i_i_reg_1316_pp0_iter1_reg == 1'd1) & (exitcond460_i_i_reg_1302_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_93_i_reg_1263 == 1'd1) & (or_cond_i_i_i_reg_1316_pp0_iter1_reg == 1'd1) & (icmp_reg_1258 == 1'd0) & (exitcond460_i_i_reg_1302_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_3_ce1 = 1'b1;
    end else begin
        k_buf_0_val_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_2_i_reg_1253 == 1'd1) & (icmp_reg_1258 == 1'd1) & (or_cond_i_i_i_reg_1316_pp0_iter1_reg == 1'd1) & (exitcond460_i_i_reg_1302_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_93_i_reg_1263 == 1'd1) & (or_cond_i_i_i_reg_1316_pp0_iter1_reg == 1'd1) & (icmp_reg_1258 == 1'd0) & (exitcond460_i_i_reg_1302_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_3_we1 = 1'b1;
    end else begin
        k_buf_0_val_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_4_ce0 = 1'b1;
    end else begin
        k_buf_0_val_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_2_i_reg_1253 == 1'd1) & (icmp_reg_1258 == 1'd1) & (or_cond_i_i_i_reg_1316_pp0_iter1_reg == 1'd1) & (exitcond460_i_i_reg_1302_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_93_1_i_reg_1267 == 1'd1) & (or_cond_i_i_i_reg_1316_pp0_iter1_reg == 1'd1) & (icmp_reg_1258 == 1'd0) & (exitcond460_i_i_reg_1302_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_4_ce1 = 1'b1;
    end else begin
        k_buf_0_val_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_936)) begin
        if (((tmp_2_i_reg_1253 == 1'd1) & (icmp_reg_1258 == 1'd1))) begin
            k_buf_0_val_4_d1 = k_buf_0_val_3_q0;
        end else if (((tmp_93_1_i_reg_1267 == 1'd1) & (icmp_reg_1258 == 1'd0))) begin
            k_buf_0_val_4_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_4_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_4_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_2_i_reg_1253 == 1'd1) & (icmp_reg_1258 == 1'd1) & (or_cond_i_i_i_reg_1316_pp0_iter1_reg == 1'd1) & (exitcond460_i_i_reg_1302_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_93_1_i_reg_1267 == 1'd1) & (or_cond_i_i_i_reg_1316_pp0_iter1_reg == 1'd1) & (icmp_reg_1258 == 1'd0) & (exitcond460_i_i_reg_1302_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_4_we1 = 1'b1;
    end else begin
        k_buf_0_val_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_5_ce0 = 1'b1;
    end else begin
        k_buf_0_val_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_2_i_reg_1253 == 1'd1) & (icmp_reg_1258 == 1'd1) & (or_cond_i_i_i_reg_1316_pp0_iter1_reg == 1'd1) & (exitcond460_i_i_reg_1302_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_93_i_reg_1263 == 1'd1) & (or_cond_i_i_i_reg_1316_pp0_iter1_reg == 1'd1) & (icmp_reg_1258 == 1'd0) & (exitcond460_i_i_reg_1302_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_ce1 = 1'b1;
    end else begin
        k_buf_0_val_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_936)) begin
        if (((tmp_2_i_reg_1253 == 1'd1) & (icmp_reg_1258 == 1'd1))) begin
            k_buf_0_val_5_d1 = k_buf_0_val_4_q0;
        end else if (((tmp_93_i_reg_1263 == 1'd1) & (icmp_reg_1258 == 1'd0))) begin
            k_buf_0_val_5_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_5_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_5_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_2_i_reg_1253 == 1'd1) & (icmp_reg_1258 == 1'd1) & (or_cond_i_i_i_reg_1316_pp0_iter1_reg == 1'd1) & (exitcond460_i_i_reg_1302_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_93_i_reg_1263 == 1'd1) & (or_cond_i_i_i_reg_1316_pp0_iter1_reg == 1'd1) & (icmp_reg_1258 == 1'd0) & (exitcond460_i_i_reg_1302_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_we1 = 1'b1;
    end else begin
        k_buf_0_val_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((or_cond_i_i_reg_1339_pp0_iter4_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        p_dst_data_stream_V_blk_n = p_dst_data_stream_V_full_n;
    end else begin
        p_dst_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((or_cond_i_i_reg_1339_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_dst_data_stream_V_write = 1'b1;
    end else begin
        p_dst_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_src_cols_V_blk_n = p_src_cols_V_empty_n;
    end else begin
        p_src_cols_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_src_cols_V_empty_n == 1'b0) | (p_src_rows_V_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_src_cols_V_read = 1'b1;
    end else begin
        p_src_cols_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_2_i_reg_1253 == 1'd1) & (icmp_reg_1258 == 1'd1) & (or_cond_i_i_i_reg_1316_pp0_iter1_reg == 1'd1) & (exitcond460_i_i_reg_1302_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((or_cond_i_i_i_reg_1316_pp0_iter1_reg == 1'd1) & (icmp_reg_1258 == 1'd0) & (exitcond460_i_i_reg_1302_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        p_src_data_stream_V_blk_n = p_src_data_stream_V_empty_n;
    end else begin
        p_src_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_predicate_op170_read_state6 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op159_read_state6 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        p_src_data_stream_V_read = 1'b1;
    end else begin
        p_src_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_src_rows_V_blk_n = p_src_rows_V_empty_n;
    end else begin
        p_src_rows_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_src_cols_V_empty_n == 1'b0) | (p_src_rows_V_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_src_rows_V_read = 1'b1;
    end else begin
        p_src_rows_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((p_src_cols_V_empty_n == 1'b0) | (p_src_rows_V_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond461_i_i_fu_406_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)) & ~((ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ImagLoc_x_fu_677_p2 = ($signed(32'd4294967295) + $signed(t_V_2_reg_299));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((or_cond_i_i_reg_1339_pp0_iter4_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op170_read_state6 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op159_read_state6 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((or_cond_i_i_reg_1339_pp0_iter4_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op170_read_state6 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op159_read_state6 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((or_cond_i_i_reg_1339_pp0_iter4_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op170_read_state6 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op159_read_state6 == 1'b1)))));
end

always @ (*) begin
    ap_block_state1 = ((p_src_cols_V_empty_n == 1'b0) | (p_src_rows_V_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp0_stage0_iter2 = (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op170_read_state6 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op159_read_state6 == 1'b1)));
end

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_pp0_stage0_iter5 = ((or_cond_i_i_reg_1339_pp0_iter4_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_936 = ((or_cond_i_i_i_reg_1316_pp0_iter1_reg == 1'd1) & (exitcond460_i_i_reg_1302_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_enable_operation_132 = (exitcond460_i_i_reg_1302 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_135 = (exitcond460_i_i_reg_1302 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_137 = (ap_predicate_op137_load_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_150 = (exitcond460_i_i_reg_1302_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_153 = (exitcond460_i_i_reg_1302_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_156 = (ap_predicate_op156_load_state6 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_160 = (ap_predicate_op160_store_state6 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_162 = (ap_predicate_op162_store_state6 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_164 = (ap_predicate_op164_store_state6 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_168 = (ap_predicate_op168_store_state6 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_169 = (ap_predicate_op169_store_state6 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_171 = (ap_predicate_op171_store_state6 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state5_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state6_pp0_iter2_stage0 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_predicate_op137_load_state5 = ((brmerge_i_reg_1332 == 1'd1) & (exitcond460_i_i_reg_1302 == 1'd0));
end

always @ (*) begin
    ap_predicate_op156_load_state6 = ((brmerge_i_reg_1332_pp0_iter1_reg == 1'd1) & (exitcond460_i_i_reg_1302_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op159_read_state6 = ((or_cond_i_i_i_reg_1316_pp0_iter1_reg == 1'd1) & (icmp_reg_1258 == 1'd0) & (exitcond460_i_i_reg_1302_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op160_store_state6 = ((tmp_93_i_reg_1263 == 1'd1) & (or_cond_i_i_i_reg_1316_pp0_iter1_reg == 1'd1) & (icmp_reg_1258 == 1'd0) & (exitcond460_i_i_reg_1302_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op162_store_state6 = ((tmp_93_1_i_reg_1267 == 1'd1) & (or_cond_i_i_i_reg_1316_pp0_iter1_reg == 1'd1) & (icmp_reg_1258 == 1'd0) & (exitcond460_i_i_reg_1302_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op164_store_state6 = ((tmp_93_i_reg_1263 == 1'd1) & (or_cond_i_i_i_reg_1316_pp0_iter1_reg == 1'd1) & (icmp_reg_1258 == 1'd0) & (exitcond460_i_i_reg_1302_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op168_store_state6 = ((tmp_2_i_reg_1253 == 1'd1) & (icmp_reg_1258 == 1'd1) & (or_cond_i_i_i_reg_1316_pp0_iter1_reg == 1'd1) & (exitcond460_i_i_reg_1302_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op169_store_state6 = ((tmp_2_i_reg_1253 == 1'd1) & (icmp_reg_1258 == 1'd1) & (or_cond_i_i_i_reg_1316_pp0_iter1_reg == 1'd1) & (exitcond460_i_i_reg_1302_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op170_read_state6 = ((tmp_2_i_reg_1253 == 1'd1) & (icmp_reg_1258 == 1'd1) & (or_cond_i_i_i_reg_1316_pp0_iter1_reg == 1'd1) & (exitcond460_i_i_reg_1302_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op171_store_state6 = ((tmp_2_i_reg_1253 == 1'd1) & (icmp_reg_1258 == 1'd1) & (or_cond_i_i_i_reg_1316_pp0_iter1_reg == 1'd1) & (exitcond460_i_i_reg_1302_pp0_iter1_reg == 1'd0));
end

assign brmerge_i_fu_753_p2 = (tmp_6_i_fu_697_p2 | tmp_48_0_not_i_reg_1287);

assign col_assign_1_t_i_fu_790_p2 = (tmp_1_reg_1240 - tmp_32_fu_779_p1);

assign col_buf_0_val_0_0_fu_824_p3 = ((brmerge_i_reg_1332_pp0_iter1_reg[0:0] === 1'b1) ? k_buf_0_val_3_q0 : tmp_15_fu_813_p5);

assign col_buf_0_val_1_0_fu_842_p3 = ((brmerge_i_reg_1332_pp0_iter1_reg[0:0] === 1'b1) ? k_buf_0_val_4_q0 : tmp_16_fu_831_p5);

assign col_buf_0_val_2_0_fu_860_p3 = ((brmerge_i_reg_1332_pp0_iter1_reg[0:0] === 1'b1) ? k_buf_0_val_5_q0 : tmp_17_fu_849_p5);

assign cols_fu_318_p0 = p_src_cols_V_dout;

assign cols_fu_318_p1 = cols_fu_318_p0;

assign exitcond460_i_i_fu_650_p2 = ((t_V_2_reg_299 == tmp_cast_i_reg_1213) ? 1'b1 : 1'b0);

assign exitcond461_i_i_fu_406_p2 = ((t_V_reg_288 == tmp_1_cast_i_reg_1218) ? 1'b1 : 1'b0);

assign extLd14_cast_i_fu_322_p0 = p_src_cols_V_dout;

assign extLd14_cast_i_fu_322_p1 = extLd14_cast_i_fu_322_p0;

assign extLd_cast_i_fu_314_p0 = p_src_rows_V_dout;

assign extLd_cast_i_fu_314_p1 = extLd_cast_i_fu_314_p0;

assign i_V_fu_411_p2 = (t_V_reg_288 + 32'd1);

assign icmp1_fu_671_p2 = ((tmp_29_fu_661_p4 != 31'd0) ? 1'b1 : 1'b0);

assign icmp_fu_432_p2 = ((tmp_7_fu_422_p4 != 31'd0) ? 1'b1 : 1'b0);

assign j_V_fu_655_p2 = (t_V_2_reg_299 + 32'd1);

assign k_buf_0_val_3_address0 = tmp_58_i_fu_783_p1;

assign k_buf_0_val_3_address1 = k_buf_0_val_3_addr_reg_1343;

assign k_buf_0_val_4_address0 = tmp_58_i_fu_783_p1;

assign k_buf_0_val_4_address1 = k_buf_0_val_4_addr_reg_1356;

assign k_buf_0_val_5_address0 = tmp_58_i_fu_783_p1;

assign k_buf_0_val_5_address1 = k_buf_0_val_5_addr_reg_1362;

assign not_i_i_i_fu_1087_p2 = ((tmp_21_fu_1071_p4 != 3'd0) ? 1'b1 : 1'b0);

assign or_cond_i496_i_2_i_fu_546_p2 = (tmp_120_2_i_fu_541_p2 & rev1_fu_535_p2);

assign or_cond_i496_i_i_fu_484_p2 = (tmp_120_i_fu_479_p2 & rev_fu_473_p2);

assign or_cond_i_i_fu_758_p2 = (icmp_reg_1258 & icmp1_fu_671_p2);

assign or_cond_i_i_i_fu_702_p2 = (tmp_6_i_fu_697_p2 & rev2_fu_691_p2);

assign overflow_fu_1093_p2 = (tmp_i_i_i_fu_1081_p2 & not_i_i_i_fu_1087_p2);

assign p_Result_s_fu_1052_p3 = p_Val2_s_fu_1046_p2[32'd10];

assign p_Val2_1_fu_1065_p2 = (tmp_35_fu_1023_p1 + tmp22_fu_1060_p2);

assign p_Val2_3_fu_1113_p3 = ((tmp_1_i_i_i_fu_1107_p2[0:0] === 1'b1) ? p_mux_i_i_cast_i_fu_1099_p3 : p_Val2_1_fu_1065_p2);

assign p_Val2_s_fu_1046_p2 = (sum_V_2_i_fu_1005_p2 + tmp21_cast_fu_1042_p1);

assign p_assign_1_fu_716_p2 = (32'd1 - t_V_2_reg_299);

assign p_assign_2_fu_763_p2 = ($signed(tmp_10_cast_i_reg_1235) - $signed(p_p2_i_i_i_reg_1321));

assign p_assign_3_fu_767_p3 = ((or_cond_i_i_i_reg_1316[0:0] === 1'b1) ? ImagLoc_x_reg_1311 : p_assign_2_fu_763_p2);

assign p_assign_6_2_i_fu_521_p2 = ($signed(32'd4294967293) + $signed(t_V_reg_288));

assign p_assign_7_2_i_fu_560_p2 = (32'd3 - t_V_reg_288);

assign p_assign_7_i_fu_498_p2 = (32'd1 - t_V_reg_288);

assign p_dst_data_stream_V_din = p_Val2_3_reg_1386;

assign p_mux_i_i_cast_i_fu_1099_p3 = ((tmp_i_i_i_fu_1081_p2[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign p_p2_i497_i_2_i_fu_566_p3 = ((tmp_26_fu_552_p3[0:0] === 1'b1) ? p_assign_7_2_i_fu_560_p2 : p_assign_6_2_i_fu_521_p2);

assign p_p2_i497_i_i_fu_504_p3 = ((tmp_18_fu_490_p3[0:0] === 1'b1) ? p_assign_7_i_fu_498_p2 : tmp_118_i_fu_459_p2);

assign p_p2_i_i_i_fu_722_p3 = ((tmp_31_fu_708_p3[0:0] === 1'b1) ? p_assign_1_fu_716_p2 : ImagLoc_x_fu_677_p2);

assign p_shl_cast_i_fu_957_p1 = p_shl_i_fu_949_p3;

assign p_shl_i_fu_949_p3 = {{src_kernel_win_0_va_2_fu_166}, {1'd0}};

assign r_V_0_2_cast_i_cast_fu_961_p1 = src_kernel_win_0_va_5_reg_1375;

assign r_V_0_cast_i_cast_fu_945_p1 = src_kernel_win_0_va_3_fu_170;

assign r_V_2_2_1_i_fu_1011_p3 = {{src_kernel_win_0_va_fu_158}, {1'd0}};

assign rev1_fu_535_p2 = (tmp_25_fu_527_p3 ^ 1'd1);

assign rev2_fu_691_p2 = (tmp_30_fu_683_p3 ^ 1'd1);

assign rev_fu_473_p2 = (tmp_9_fu_465_p3 ^ 1'd1);

assign row_assign_8_0_t_i_fu_642_p2 = (tmp_reg_1223 - tmp_10_reg_1277);

assign row_assign_8_2_t_i_fu_646_p2 = (tmp_reg_1223 - tmp_14_reg_1282);

assign rows_fu_310_p0 = p_src_rows_V_dout;

assign rows_fu_310_p1 = rows_fu_310_p0;

assign sel_tmp7_fu_741_p2 = (tmp_6_i_not_fu_735_p2 | tmp_30_fu_683_p3);

assign sel_tmp8_fu_747_p2 = (tmp_8_i_fu_730_p2 & sel_tmp7_fu_741_p2);

assign src_kernel_win_0_va_4_fu_914_p3 = ((tmp_115_i_reg_1271[0:0] === 1'b1) ? tmp_19_fu_903_p5 : col_buf_0_val_0_0_fu_824_p3);

assign src_kernel_win_0_va_5_fu_932_p3 = ((tmp_115_i_reg_1271[0:0] === 1'b1) ? tmp_20_fu_921_p5 : col_buf_0_val_2_0_fu_860_p3);

assign sum9_cast_i_fu_998_p1 = sum9_i_reg_1381;

assign sum9_i_fu_974_p2 = (p_shl_cast_i_fu_957_p1 + tmp20_cast_fu_970_p1);

assign sum_V_2_i_fu_1005_p2 = (tmp_138_2_cast_i_fu_1001_p1 - sum9_cast_i_fu_998_p1);

assign tmp20_cast_fu_970_p1 = tmp5_fu_964_p2;

assign tmp21_cast_fu_1042_p1 = tmp21_fu_1036_p2;

assign tmp21_fu_1036_p2 = (tmp_138_2_2_cast_i_c_fu_1033_p1 + tmp_138_2_cast_i_ca_fu_1019_p1);

assign tmp22_fu_1060_p2 = (src_kernel_win_0_va_4_reg_1368_pp0_iter3_reg + tmp_36_fu_1027_p2);

assign tmp5_fu_964_p2 = (r_V_0_2_cast_i_cast_fu_961_p1 + r_V_0_cast_i_cast_fu_945_p1);

assign tmp_10_cast_i_fu_396_p1 = $signed(tmp_10_i_fu_390_p2);

assign tmp_10_fu_602_p3 = ((or_cond_i496_i_i_fu_484_p2[0:0] === 1'b1) ? tmp_3_fu_596_p2 : tmp_2_fu_588_p3);

assign tmp_10_i_fu_390_p2 = ($signed(14'd16382) + $signed(tmp_9_cast_i_fu_386_p1));

assign tmp_115_i_fu_450_p2 = ((t_V_reg_288 > rows_reg_1197) ? 1'b1 : 1'b0);

assign tmp_118_i_fu_459_p2 = ($signed(32'd4294967295) + $signed(t_V_reg_288));

assign tmp_11_fu_610_p2 = (tmp_133_i_reg_1229 - tmp_28_fu_579_p1);

assign tmp_120_2_i_fu_541_p2 = (($signed(p_assign_6_2_i_fu_521_p2) < $signed(rows_reg_1197)) ? 1'b1 : 1'b0);

assign tmp_120_i_fu_479_p2 = (($signed(tmp_118_i_fu_459_p2) < $signed(rows_reg_1197)) ? 1'b1 : 1'b0);

assign tmp_12_fu_615_p3 = ((tmp_131_2_i_fu_574_p2[0:0] === 1'b1) ? tmp_28_fu_579_p1 : tmp_11_fu_610_p2);

assign tmp_131_2_i_fu_574_p2 = (($signed(p_p2_i497_i_2_i_fu_566_p3) < $signed(rows_reg_1197)) ? 1'b1 : 1'b0);

assign tmp_131_i_fu_512_p2 = (($signed(p_p2_i497_i_i_fu_504_p3) < $signed(rows_reg_1197)) ? 1'b1 : 1'b0);

assign tmp_132_cast_i1_fu_364_p3 = {{tmp_6_fu_360_p1}, {1'd0}};

assign tmp_133_i_fu_372_p2 = (tmp_132_cast_i1_fu_364_p3 ^ 2'd2);

assign tmp_138_2_2_cast_i_c_fu_1033_p1 = src_kernel_win_0_va_4_reg_1368_pp0_iter3_reg;

assign tmp_138_2_cast_i_ca_fu_1019_p1 = r_V_2_2_1_i_fu_1011_p3;

assign tmp_138_2_cast_i_fu_1001_p1 = src_kernel_win_0_va_1_fu_162;

assign tmp_13_fu_623_p2 = (2'd1 + tmp_8_fu_455_p1);

assign tmp_14_fu_629_p3 = ((or_cond_i496_i_2_i_fu_546_p2[0:0] === 1'b1) ? tmp_13_fu_623_p2 : tmp_12_fu_615_p3);

assign tmp_18_fu_490_p3 = tmp_118_i_fu_459_p2[32'd31];

assign tmp_1_cast_i_fu_342_p1 = $signed(tmp_1_i_fu_336_p2);

assign tmp_1_fu_400_p2 = ($signed(2'd3) + $signed(tmp_5_fu_350_p1));

assign tmp_1_i_fu_336_p2 = ($signed(13'd2) + $signed(extLd_cast_i_fu_314_p1));

assign tmp_1_i_i_i_fu_1107_p2 = (p_Result_s_fu_1052_p3 | overflow_fu_1093_p2);

assign tmp_21_fu_1071_p4 = {{p_Val2_s_fu_1046_p2[10:8]}};

assign tmp_24_fu_517_p1 = p_p2_i497_i_i_fu_504_p3[1:0];

assign tmp_25_fu_527_p3 = p_assign_6_2_i_fu_521_p2[32'd31];

assign tmp_26_fu_552_p3 = p_assign_6_2_i_fu_521_p2[32'd31];

assign tmp_28_fu_579_p1 = p_p2_i497_i_2_i_fu_566_p3[1:0];

assign tmp_29_fu_661_p4 = {{t_V_2_reg_299[31:1]}};

assign tmp_2_fu_588_p3 = ((tmp_131_i_fu_512_p2[0:0] === 1'b1) ? tmp_24_fu_517_p1 : tmp_s_fu_583_p2);

assign tmp_2_i_fu_417_p2 = ((t_V_reg_288 < rows_reg_1197) ? 1'b1 : 1'b0);

assign tmp_30_fu_683_p3 = ImagLoc_x_fu_677_p2[32'd31];

assign tmp_31_fu_708_p3 = ImagLoc_x_fu_677_p2[32'd31];

assign tmp_32_fu_779_p1 = x_fu_773_p3[1:0];

assign tmp_35_fu_1023_p1 = sum_V_2_i_fu_1005_p2[7:0];

assign tmp_36_fu_1027_p2 = src_kernel_win_0_va_fu_158 << 8'd1;

assign tmp_3_fu_596_p2 = ($signed(2'd3) + $signed(tmp_8_fu_455_p1));

assign tmp_48_0_not_i_fu_637_p2 = (tmp_2_i_reg_1253 ^ 1'd1);

assign tmp_4_fu_346_p0 = p_src_rows_V_dout;

assign tmp_4_fu_346_p1 = tmp_4_fu_346_p0[1:0];

assign tmp_58_i_fu_783_p1 = x_fu_773_p3;

assign tmp_5_fu_350_p0 = p_src_cols_V_dout;

assign tmp_5_fu_350_p1 = tmp_5_fu_350_p0[1:0];

assign tmp_6_fu_360_p0 = p_src_rows_V_dout;

assign tmp_6_fu_360_p1 = tmp_6_fu_360_p0[0:0];

assign tmp_6_i_fu_697_p2 = (($signed(ImagLoc_x_fu_677_p2) < $signed(cols_reg_1207)) ? 1'b1 : 1'b0);

assign tmp_6_i_not_fu_735_p2 = (tmp_6_i_fu_697_p2 ^ 1'd1);

assign tmp_7_fu_422_p4 = {{t_V_reg_288[31:1]}};

assign tmp_8_fu_455_p1 = t_V_reg_288[1:0];

assign tmp_8_i_fu_730_p2 = (($signed(p_p2_i_i_i_fu_722_p3) < $signed(cols_reg_1207)) ? 1'b1 : 1'b0);

assign tmp_93_1_i_fu_444_p2 = ((t_V_reg_288 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_93_i_fu_438_p2 = ((t_V_reg_288 == 32'd1) ? 1'b1 : 1'b0);

assign tmp_9_cast_i_fu_386_p1 = $signed(tmp_9_i_fu_378_p3);

assign tmp_9_fu_465_p3 = tmp_118_i_fu_459_p2[32'd31];

assign tmp_9_i_fu_378_p1 = p_src_cols_V_dout;

assign tmp_9_i_fu_378_p3 = {{tmp_9_i_fu_378_p1}, {1'd0}};

assign tmp_cast_i_fu_332_p1 = $signed(tmp_i_fu_326_p2);

assign tmp_fu_354_p2 = ($signed(2'd3) + $signed(tmp_4_fu_346_p1));

assign tmp_i_fu_326_p2 = ($signed(13'd2) + $signed(extLd14_cast_i_fu_322_p1));

assign tmp_i_i_i_fu_1081_p2 = (p_Result_s_fu_1052_p3 ^ 1'd1);

assign tmp_s_fu_583_p2 = (tmp_133_i_reg_1229 - tmp_24_fu_517_p1);

assign x_fu_773_p3 = ((sel_tmp8_reg_1327[0:0] === 1'b1) ? p_p2_i_i_i_reg_1321 : p_assign_3_fu_767_p3);

always @ (posedge ap_clk) begin
    tmp_10_cast_i_reg_1235[0] <= 1'b0;
end

endmodule //Filter2D
